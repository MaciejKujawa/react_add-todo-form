{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","cn","completed","title","TodoList","todos","map","getUser","userId","usersFromServer","find","App","useState","setTitle","setUserId","titleErrorMessage","setTitleErrorMessage","userErrorMessage","setUserErrorMessage","allTodos","setAllTodos","action","method","onSubmit","event","preventDefault","findId","Math","max","htmlFor","type","value","onChange","target","placeholder","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.baa1af9d.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ninterface Props {\n  user: User,\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo;\n}\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {todo.user && <UserInfo user={todo.user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos : Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map((todo) => (<TodoInfo key={todo.id} todo={todo} />))}\n  </section>\n);\n","import { FormEventHandler, useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\n// import { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number) {\n  const findUser = usersFromServer.find(user => user.id === userId);\n\n  return findUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState('0');\n  const [titleErrorMessage, setTitleErrorMessage] = useState('');\n  const [userErrorMessage, setUserErrorMessage] = useState('');\n  const [allTodos, setAllTodos] = useState(todos);\n\n  const handleNewTitle: React.ChangeEventHandler<HTMLInputElement>\n    = (event) => {\n      setTitleErrorMessage('');\n\n      return setTitle(event.target.value);\n    };\n\n  const handleUserChange: React.ChangeEventHandler<HTMLSelectElement>\n    = (event) => {\n      setUserErrorMessage('');\n\n      return setUserId(event.target.value);\n    };\n\n  const handleSubmit: FormEventHandler = (event) => {\n    event.preventDefault();\n\n    if (!title) {\n      setTitleErrorMessage('Please enter a title');\n    }\n\n    if (userId === '0') {\n      setUserErrorMessage('Please choose a user');\n    }\n\n    const findId = Math.max(...allTodos.map(todo => todo.id), 0);\n\n    const todo: Todo = {\n      id: (findId + 1),\n      title,\n      userId: +userId,\n      completed: false,\n      user: getUser(+userId),\n    };\n\n    if (title && userId !== '0') {\n      setAllTodos([...allTodos, todo]);\n      setTitle('');\n      setUserId('0');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            id=\"title\"\n            value={title}\n            onChange={handleNewTitle}\n            placeholder=\"Enter a title\"\n          />\n          <span className=\"error\">{titleErrorMessage}</span>\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User: </label>\n          <select\n            id=\"user\"\n            data-cy=\"userSelect\"\n            onChange={handleUserChange}\n            value={userId}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.id}>{user.name}</option>\n            ))}\n          </select>\n          <span className=\"error\">{userErrorMessage}</span>\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={allTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}